// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NLayer.Repository;

#nullable disable

namespace NLayer.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220519095858_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NLayer.Core.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BirthDate")
                        .HasMaxLength(20)
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<long>("IdentityNo")
                        .HasMaxLength(50)
                        .HasColumnType("bigint");

                    b.Property<bool>("IdentityNoVerified")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Customers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = 2000,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 0,
                            IdentityNo = 11111111111L,
                            IdentityNoVerified = false,
                            Name = "Doctor",
                            StatusId = 3,
                            Surname = "Strange"
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = 2000,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 0,
                            IdentityNo = 22222222222L,
                            IdentityNoVerified = false,
                            Name = "Black",
                            StatusId = 3,
                            Surname = "Widow"
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = 2000,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = 0,
                            IdentityNo = 33333333333L,
                            IdentityNoVerified = false,
                            Name = "Spider",
                            StatusId = 3,
                            Surname = "Man"
                        });
                });

            modelBuilder.Entity("NLayer.Core.Models.CustomerCreditCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CardBrand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CardPan")
                        .HasMaxLength(16)
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Cards", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CardBrand = "Master Card",
                            CardPan = 5555444433332222L,
                            CreatedDate = new DateTime(2022, 5, 19, 13, 58, 58, 305, DateTimeKind.Local).AddTicks(8331),
                            CustomerId = 1,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 2,
                            CardBrand = "Master Card",
                            CardPan = 5555444433332222L,
                            CreatedDate = new DateTime(2022, 5, 19, 13, 58, 58, 305, DateTimeKind.Local).AddTicks(8341),
                            CustomerId = 1,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 3,
                            CardBrand = "Master Card",
                            CardPan = 5555444433332222L,
                            CreatedDate = new DateTime(2022, 5, 19, 13, 58, 58, 305, DateTimeKind.Local).AddTicks(8342),
                            CustomerId = 1,
                            StatusId = 3
                        },
                        new
                        {
                            Id = 4,
                            CardBrand = "Master Card",
                            CardPan = 5555444433332222L,
                            CreatedDate = new DateTime(2022, 5, 19, 13, 58, 58, 305, DateTimeKind.Local).AddTicks(8343),
                            CustomerId = 2,
                            StatusId = 1
                        },
                        new
                        {
                            Id = 5,
                            CardBrand = "Master Card",
                            CardPan = 5555444433332222L,
                            CreatedDate = new DateTime(2022, 5, 19, 13, 58, 58, 305, DateTimeKind.Local).AddTicks(8344),
                            CustomerId = 2,
                            StatusId = 1
                        });
                });

            modelBuilder.Entity("NLayer.Core.Models.CustomerCreditCardFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CardNetwork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerCreditCardId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerCreditCardId")
                        .IsUnique();

                    b.ToTable("CustomerCreditCardFeatures");
                });

            modelBuilder.Entity("NLayer.Core.Models.TransactionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CardToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerCreditCardId")
                        .HasColumnType("int");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("TypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CustomerCreditCardId")
                        .IsUnique();

                    b.HasIndex("CustomerId");

                    b.ToTable("TransactionLogs", (string)null);
                });

            modelBuilder.Entity("NLayer.Core.Models.CustomerCreditCard", b =>
                {
                    b.HasOne("NLayer.Core.Models.Customer", "Customer")
                        .WithMany("CustomerCreditCards")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("NLayer.Core.Models.CustomerCreditCardFeature", b =>
                {
                    b.HasOne("NLayer.Core.Models.CustomerCreditCard", "CustomerCreditCard")
                        .WithOne("CustomerCreditCardFeature")
                        .HasForeignKey("NLayer.Core.Models.CustomerCreditCardFeature", "CustomerCreditCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CustomerCreditCard");
                });

            modelBuilder.Entity("NLayer.Core.Models.TransactionLog", b =>
                {
                    b.HasOne("NLayer.Core.Models.CustomerCreditCard", "CustomerCreditCard")
                        .WithOne("TransactionLogs")
                        .HasForeignKey("NLayer.Core.Models.TransactionLog", "CustomerCreditCardId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NLayer.Core.Models.Customer", "Customer")
                        .WithMany("TransactionLogs")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("CustomerCreditCard");
                });

            modelBuilder.Entity("NLayer.Core.Models.Customer", b =>
                {
                    b.Navigation("CustomerCreditCards");

                    b.Navigation("TransactionLogs");
                });

            modelBuilder.Entity("NLayer.Core.Models.CustomerCreditCard", b =>
                {
                    b.Navigation("CustomerCreditCardFeature");

                    b.Navigation("TransactionLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
